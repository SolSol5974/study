#include <iostream>
using namespace std;
class ThreeMatrices
{
	int a[3][5] = { {5, 10, 2, 7, 5}, {4, 6, 2, 2, 9}, {1, 9, 2, 8, 4} };
	int b[3][5] = { {5, 2, 7, 4, 5}, {10, 6, 9, 2, 3}, {2, 6, 4, 7, 1} };
	int c[3][5];
public:
	ThreeMatrices();
	void printC();
	void biggerC();
	void smallerC();
};
ThreeMatrices::ThreeMatrices()
{
	for (int m = 0; m < 3; m++)
	{
		for (int n = 0; n < 5; n++)
		{
			c[m][n] = 0;
		}
	}
}
void ThreeMatrices::printC()
{
	for (int m = 0; m < 3; m++)
	{
		for (int n = 0; n < 5; n++)
		{
			cout << c[m][n] << " ";
		}
		cout << endl;
	}
}
void ThreeMatrices::biggerC()
{
	for (int m = 0; m < 3; m++)
	{
		for (int n = 0; n < 5; n++)
		{
			if (a[m][n] - b[m][n] > 0)
			{
				c[m][n] = a[m][n];
			}
			else
				c[m][n] = b[m][n];
		}
	}
	
}
void ThreeMatrices::smallerC()
{
	for (int m = 0; m < 3; m++)
	{
		for (int n = 0; n < 5; n++)
		{
			if (a[m][n] - b[m][n] < 0)
			{
				c[m][n] = a[m][n];
			}
			else
				c[m][n] = b[m][n];
		}
	}
	
}
int main()
{
		ThreeMatrices m;
		cout << "initial..." << endl; m.printC();
		cout << "bigger..." << endl; m.biggerC(); m.printC();
		cout << "smaller..." << endl; m.smallerC(); m.printC();
}
